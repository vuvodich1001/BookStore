package com.uit.entity;
// Generated May 24, 2021 9:48:38 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name="BOOK"
    ,schema="DOAN_NEW"
)
public class Book  implements java.io.Serializable {


     private long bookId;
     private Category category;
     private String title;
     private String author;
     private String description;
     private String isbn;
     private String image;
     private Double price;
     private Date publishDate;
     private Date lastUpdate;
     private Set<Review> reviews = new HashSet<>(0);
     private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);

    public Book() {
    }

    public Book(long bookId, Category category, Date lastUpdate) {
        this.bookId = bookId;
        this.category = category;
        this.lastUpdate = lastUpdate;
    }
    
    public Book(long bookId, Category category, String title, String author, String description, String isbn, String image, Double price, Date publishDate,
            Date lastUpdate, Set<Review> reviews, Set<OrderDetail> orderDetails) {
       this.bookId = bookId;
       this.category = category;
       this.title = title;
       this.author = author;
       this.description = description;
       this.isbn = isbn;
       this.image = image;
       this.price = price;
       this.publishDate = publishDate;
       this.lastUpdate = lastUpdate;
       this.reviews = reviews;
       this.orderDetails = orderDetails;
    }
   
     @Id 

    
    @Column(name="BOOK_ID", unique=true, nullable=false, precision=10, scale=0)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "book_generator")
    @SequenceGenerator(name="book_generator", sequenceName = "seq_book", allocationSize = 1)
    public long getBookId() {
        return this.bookId;
    }
    
    public void setBookId(long bookId) {
        this.bookId = bookId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CATEGORY_ID", nullable=false)
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

    
    @Column(name="TITLE", length=128)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="AUTHOR", length=64)
    public String getAuthor() {
        return this.author;
    }
    
    public void setAuthor(String author) {
        this.author = author;
    }

    
    @Column(name="DESCRIPTION", length=200)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="ISBN", length=15)
    public String getIsbn() {
        return this.isbn;
    }
    
    public void setIsbn(String isbn) {
        this.isbn = isbn;
    }

    
    @Column(name="IMAGE", length=100)
    public String getImage() {
        return this.image;
    }
    
    public void setImage(String image) {
        this.image = image;
    }

    
    @Column(name="PRICE", precision=126, scale=0)
    public Double getPrice() {
        return this.price;
    }
    
    public void setPrice(Double price) {
        this.price = price;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="PUBLISH_DATE", length=7)
    public Date getPublishDate() {
        return this.publishDate;
    }
    
    public void setPublishDate(Date publishDate) {
        this.publishDate = publishDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="LAST_UPDATE", nullable=false, length=7)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }
    
    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="book")
    public Set<Review> getReviews() {
        return this.reviews;
    }
    
    public void setReviews(Set<Review> reviews) {
        this.reviews = reviews;
    }
    
@OneToMany(fetch=FetchType.LAZY, mappedBy="book")
    public Set<OrderDetail> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetail> orderDetails) {
        this.orderDetails = orderDetails;
    }

    @Override
    public String toString() {
        return "Book{" + "bookId=" + bookId + ", title=" + title + '}';
    }

    


}


